parameters:
  - name: PackageArtifactName
  # No ARM templates in the repo
  - name: AnalyzeARMTemplates
    default: false
  - name: AnalyzePackages
    default: true
  - name: RunAntiMalware
    default: true
  - name: CredScanDirectory
    default: '$(Build.SourcesDirectory)'

steps:
- ${{ if eq(parameters.AnalyzePackages, 'true') }}:
  - task: DownloadBuildArtifacts@0
    displayName: 'Download NuGet Packages'
    inputs:
      buildType: 'current'
      downloadType: 'single'
      downloadPath: '$(Build.SourcesDirectory)/artifacts'
      artifactName: ${{ parameters.PackageArtifactName }}

- ${{ if eq(parameters.RunAntiMalware, 'true') }}:
  - task: AntiMalware@4
    inputs:
      InputType: 'Basic'
      ScanType: 'CustomScan'
      FileDirPath: '$(Build.SourcesDirectory)'
      EnableServices: true
      TreatSignatureUpdateFailureAs: 'Standard'
      SignatureFreshness: 'OneDay'
      TreatStaleSignatureAs: 'Error'

- ${{ if eq(parameters.AnalyzeARMTemplates, 'true') }}:
  - task: Armory@2
    inputs:
      targetDirectory: '$(Build.SourcesDirectory)\samples\templates'
      targetFiles: 'f|*.json'
      excludePassesFromLog: false

- task: CredScan@3
  inputs:
    scanFolder: ${{ parameters.credScanDirectory }}
    outputFormat: 'sarif'
    #suppressionsFile: 'CredScanSuppressions.json'
    verboseOutput: true

- task: SdtReport@2
  inputs:
    GdnExportAllTools: false
    GdnExportGdnToolArmory: ${{ eq(parameters.AnalyzeARMTemplates, 'true') }}
    GdnExportGdnToolCredScan: true

- task: PublishSecurityAnalysisLogs@3
  inputs:
    ArtifactName: 'CodeAnalysisLogs'
    ArtifactType: 'Container'
    AllTools: false
    AntiMalware: ${{ eq(parameters.RunAntiMalware, 'true') }}
    APIScan: false
    Armory: ${{ eq(parameters.AnalyzeARMTemplates, 'true') }}
    Bandit: false
    BinSkim: false
    CodesignValidation: false
    CredScan: true
    CSRF: false
    ESLint: false
    Flawfinder: false
    FortifySCA: false
    FxCop: false
    ModernCop: false
    MSRD: false
    PoliCheck: false
    RoslynAnalyzers: false
    SDLNativeRules: false
    Semmle: false
    SpotBugs: false
    TSLint: false
    WebScout: false
    ToolLogsNotFoundAction: 'Standard'

- task: PostAnalysis@2
  inputs:
    GdnBreakAllTools: false
    GdnBreakGdnToolArmory: ${{ eq(parameters.AnalyzeARMTemplates, 'true') }}
    GdnBreakGdnToolCredScan: true
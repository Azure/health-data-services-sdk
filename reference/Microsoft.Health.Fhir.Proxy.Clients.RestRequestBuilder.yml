### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder
  commentId: T:Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder
  id: RestRequestBuilder
  parent: Microsoft.Health.Fhir.Proxy.Clients
  children:
  - Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.Byte[],System.String)
  - Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.Byte[],System.String)
  - Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.BaseUrl
  - Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Build
  - Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Certificate
  - Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Content
  - Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.ContentType
  - Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Headers
  - Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Method
  - Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Path
  - Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.QueryString
  - Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.SecurityToken
  langs:
  - csharp
  - vb
  name: RestRequestBuilder
  nameWithType: RestRequestBuilder
  fullName: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: RestRequestBuilder
    path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
    startLine: 10
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Clients
  summary: "\nBuilder pattern for REST requests.\n"
  example: []
  syntax:
    content: public class RestRequestBuilder
    content.vb: Public Class RestRequestBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.Byte[],System.String)
  commentId: M:Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.Byte[],System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.Byte[],System.String)'
  parent: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder
  langs:
  - csharp
  - vb
  name: RestRequestBuilder(String, String, String, String, String, NameValueCollection, Byte[], String)
  nameWithType: RestRequestBuilder.RestRequestBuilder(String, String, String, String, String, NameValueCollection, Byte[], String)
  fullName: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.RestRequestBuilder(System.String, System.String, System.String, System.String, System.String, System.Collections.Specialized.NameValueCollection, System.Byte[], System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: .ctor
    path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
    startLine: 23
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Clients
  summary: "\nCreates an instance of RestRequestBuilder.\n"
  example: []
  syntax:
    content: public RestRequestBuilder(string method, string baseUrl, string securityToken, string path, string query, NameValueCollection headers, byte[] content, string contentType = "application/json")
    parameters:
    - id: method
      type: System.String
      description: Http Method.
    - id: baseUrl
      type: System.String
      description: Base URL for http request, i.e., scheme and authority.
    - id: securityToken
      type: System.String
      description: Security token for http request.
    - id: path
      type: System.String
      description: Path of the http request, i.e., scheme://authority/path
    - id: query
      type: System.String
      description: Query string for http request.
    - id: headers
      type: System.Collections.Specialized.NameValueCollection
      description: Http headers to add to request.
    - id: content
      type: System.Byte[]
      description: Body content of the http request.
    - id: contentType
      type: System.String
      description: Content type of the http request.
    content.vb: Public Sub New(method As String, baseUrl As String, securityToken As String, path As String, query As String, headers As NameValueCollection, content As Byte(), contentType As String = "application/json")
  overload: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.#ctor*
  nameWithType.vb: RestRequestBuilder.RestRequestBuilder(String, String, String, String, String, NameValueCollection, Byte(), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.RestRequestBuilder(System.String, System.String, System.String, System.String, System.String, System.Collections.Specialized.NameValueCollection, System.Byte(), System.String)
  name.vb: RestRequestBuilder(String, String, String, String, String, NameValueCollection, Byte(), String)
- uid: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.Byte[],System.String)
  commentId: M:Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.Byte[],System.String)
  id: '#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.Byte[],System.String)'
  parent: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder
  langs:
  - csharp
  - vb
  name: RestRequestBuilder(String, String, X509Certificate2, String, String, NameValueCollection, Byte[], String)
  nameWithType: RestRequestBuilder.RestRequestBuilder(String, String, X509Certificate2, String, String, NameValueCollection, Byte[], String)
  fullName: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.RestRequestBuilder(System.String, System.String, System.Security.Cryptography.X509Certificates.X509Certificate2, System.String, System.String, System.Collections.Specialized.NameValueCollection, System.Byte[], System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: .ctor
    path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
    startLine: 58
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Clients
  summary: "\nCreates an instance of RestRequestBuilder.\n"
  example: []
  syntax:
    content: public RestRequestBuilder(string method, string baseUrl, X509Certificate2 certificate, string path, string query, NameValueCollection headers, byte[] content, string contentType = "application/json")
    parameters:
    - id: method
      type: System.String
      description: Http Method.
    - id: baseUrl
      type: System.String
      description: Base URL for http request, i.e., scheme and authority.
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: X509 certificate to use as a security token.
    - id: path
      type: System.String
      description: Path of the http request, i.e., scheme://authority/path
    - id: query
      type: System.String
      description: Query string for http request.
    - id: headers
      type: System.Collections.Specialized.NameValueCollection
      description: Http headers to add to request.
    - id: content
      type: System.Byte[]
      description: Body content of the http request.
    - id: contentType
      type: System.String
      description: Content type of the http request.
    content.vb: Public Sub New(method As String, baseUrl As String, certificate As X509Certificate2, path As String, query As String, headers As NameValueCollection, content As Byte(), contentType As String = "application/json")
  overload: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.#ctor*
  nameWithType.vb: RestRequestBuilder.RestRequestBuilder(String, String, X509Certificate2, String, String, NameValueCollection, Byte(), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.RestRequestBuilder(System.String, System.String, System.Security.Cryptography.X509Certificates.X509Certificate2, System.String, System.String, System.Collections.Specialized.NameValueCollection, System.Byte(), System.String)
  name.vb: RestRequestBuilder(String, String, X509Certificate2, String, String, NameValueCollection, Byte(), String)
- uid: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.BaseUrl
  commentId: P:Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.BaseUrl
  id: BaseUrl
  parent: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder
  langs:
  - csharp
  - vb
  name: BaseUrl
  nameWithType: RestRequestBuilder.BaseUrl
  fullName: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.BaseUrl
  type: Property
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: BaseUrl
    path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
    startLine: 85
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Clients
  summary: "\nGets the base url of the request.\n"
  example: []
  syntax:
    content: public string BaseUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property BaseUrl As String
  overload: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.BaseUrl*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.ContentType
  commentId: P:Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.ContentType
  id: ContentType
  parent: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder
  langs:
  - csharp
  - vb
  name: ContentType
  nameWithType: RestRequestBuilder.ContentType
  fullName: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.ContentType
  type: Property
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: ContentType
    path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
    startLine: 90
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Clients
  summary: "\nGets the content type of the request.\n"
  example: []
  syntax:
    content: public string ContentType { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ContentType As String
  overload: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.ContentType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Content
  commentId: P:Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Content
  id: Content
  parent: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: RestRequestBuilder.Content
  fullName: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Content
  type: Property
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: Content
    path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
    startLine: 95
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Clients
  summary: "\nGets the content of the request.\n"
  example: []
  syntax:
    content: public byte[] Content { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Property Content As Byte()
  overload: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Content*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Path
  commentId: P:Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Path
  id: Path
  parent: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: RestRequestBuilder.Path
  fullName: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Path
  type: Property
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: Path
    path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
    startLine: 100
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Clients
  summary: "\nGets the path of the request.\n"
  example: []
  syntax:
    content: public string Path { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Path As String
  overload: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Path*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.QueryString
  commentId: P:Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.QueryString
  id: QueryString
  parent: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder
  langs:
  - csharp
  - vb
  name: QueryString
  nameWithType: RestRequestBuilder.QueryString
  fullName: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.QueryString
  type: Property
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: QueryString
    path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
    startLine: 105
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Clients
  summary: "\nGets the query string of the request.\n"
  example: []
  syntax:
    content: public string QueryString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property QueryString As String
  overload: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.QueryString*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Headers
  commentId: P:Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Headers
  id: Headers
  parent: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: RestRequestBuilder.Headers
  fullName: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Headers
  type: Property
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: Headers
    path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
    startLine: 110
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Clients
  summary: "\nGets a collection of HTTP headers of the request.\n"
  example: []
  syntax:
    content: public NameValueCollection Headers { get; }
    parameters: []
    return:
      type: System.Collections.Specialized.NameValueCollection
    content.vb: Public ReadOnly Property Headers As NameValueCollection
  overload: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Headers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Method
  commentId: P:Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Method
  id: Method
  parent: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder
  langs:
  - csharp
  - vb
  name: Method
  nameWithType: RestRequestBuilder.Method
  fullName: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Method
  type: Property
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: Method
    path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
    startLine: 115
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Clients
  summary: "\nGets the HTTP method of the request.\n"
  example: []
  syntax:
    content: public string Method { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Method As String
  overload: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Method*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.SecurityToken
  commentId: P:Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.SecurityToken
  id: SecurityToken
  parent: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder
  langs:
  - csharp
  - vb
  name: SecurityToken
  nameWithType: RestRequestBuilder.SecurityToken
  fullName: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.SecurityToken
  type: Property
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: SecurityToken
    path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
    startLine: 120
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Clients
  summary: "\nGets a security token (JWT) if used in the request.\n"
  example: []
  syntax:
    content: public string SecurityToken { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property SecurityToken As String
  overload: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.SecurityToken*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Certificate
  commentId: P:Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Certificate
  id: Certificate
  parent: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder
  langs:
  - csharp
  - vb
  name: Certificate
  nameWithType: RestRequestBuilder.Certificate
  fullName: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Certificate
  type: Property
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: Certificate
    path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
    startLine: 125
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Clients
  summary: "\nGet a client certificate if used in the request.\n"
  example: []
  syntax:
    content: public X509Certificate2 Certificate { get; }
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
    content.vb: Public ReadOnly Property Certificate As X509Certificate2
  overload: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Certificate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Build
  commentId: M:Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Build
  id: Build
  parent: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: RestRequestBuilder.Build()
  fullName: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Build()
  type: Method
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: Build
    path: src/Microsoft.Health.Fhir.Proxy/Clients/RestRequestBuilder.cs
    startLine: 131
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Clients
  summary: "\nBuilds an Http Web Request.\n"
  example: []
  syntax:
    content: public HttpWebRequest Build()
    return:
      type: System.Net.HttpWebRequest
      description: HttpWebRequest
    content.vb: Public Function Build As HttpWebRequest
  overload: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Build*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.Fhir.Proxy.Clients
  commentId: N:Microsoft.Health.Fhir.Proxy.Clients
  name: Microsoft.Health.Fhir.Proxy.Clients
  nameWithType: Microsoft.Health.Fhir.Proxy.Clients
  fullName: Microsoft.Health.Fhir.Proxy.Clients
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.#ctor*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.#ctor
  name: RestRequestBuilder
  nameWithType: RestRequestBuilder.RestRequestBuilder
  fullName: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.RestRequestBuilder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.NameValueCollection
  commentId: T:System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: true
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: true
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: true
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.BaseUrl*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.BaseUrl
  name: BaseUrl
  nameWithType: RestRequestBuilder.BaseUrl
  fullName: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.BaseUrl
- uid: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.ContentType*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.ContentType
  name: ContentType
  nameWithType: RestRequestBuilder.ContentType
  fullName: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.ContentType
- uid: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Content*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Content
  name: Content
  nameWithType: RestRequestBuilder.Content
  fullName: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Content
- uid: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Path*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Path
  name: Path
  nameWithType: RestRequestBuilder.Path
  fullName: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Path
- uid: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.QueryString*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.QueryString
  name: QueryString
  nameWithType: RestRequestBuilder.QueryString
  fullName: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.QueryString
- uid: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Headers*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Headers
  name: Headers
  nameWithType: RestRequestBuilder.Headers
  fullName: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Headers
- uid: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Method*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Method
  name: Method
  nameWithType: RestRequestBuilder.Method
  fullName: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Method
- uid: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.SecurityToken*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.SecurityToken
  name: SecurityToken
  nameWithType: RestRequestBuilder.SecurityToken
  fullName: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.SecurityToken
- uid: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Certificate*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Certificate
  name: Certificate
  nameWithType: RestRequestBuilder.Certificate
  fullName: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Certificate
- uid: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Build*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Build
  name: Build
  nameWithType: RestRequestBuilder.Build
  fullName: Microsoft.Health.Fhir.Proxy.Clients.RestRequestBuilder.Build
- uid: System.Net.HttpWebRequest
  commentId: T:System.Net.HttpWebRequest
  parent: System.Net
  isExternal: true
  name: HttpWebRequest
  nameWithType: HttpWebRequest
  fullName: System.Net.HttpWebRequest
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net

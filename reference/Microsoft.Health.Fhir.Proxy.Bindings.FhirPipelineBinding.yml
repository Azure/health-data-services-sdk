### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding
  commentId: T:Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding
  id: FhirPipelineBinding
  parent: Microsoft.Health.Fhir.Proxy.Bindings
  children:
  - Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.#ctor(Microsoft.Extensions.Logging.ILogger)
  - Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,Microsoft.Extensions.Logging.ILogger)
  - Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.ExecuteAsync(Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext)
  - Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.Id
  - Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.Name
  - Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.OnComplete
  - Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.OnError
  langs:
  - csharp
  - vb
  name: FhirPipelineBinding
  nameWithType: FhirPipelineBinding
  fullName: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding
  type: Class
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Bindings/FhirPipelineBinding.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: FhirPipelineBinding
    path: src/Microsoft.Health.Fhir.Proxy/Bindings/FhirPipelineBinding.cs
    startLine: 12
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Bindings
  summary: "\nA binding used to call the FHIR server and couples input/output pipelines or acts as terminator for an input pipeline.\n"
  example: []
  syntax:
    content: 'public class FhirPipelineBinding : PipelineBinding'
    content.vb: >-
      Public Class FhirPipelineBinding
          Inherits PipelineBinding
  inheritance:
  - System.Object
  - Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.#ctor(Microsoft.Extensions.Logging.ILogger)
  commentId: M:Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.#ctor(Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Microsoft.Extensions.Logging.ILogger)'
  parent: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding
  langs:
  - csharp
  - vb
  name: FhirPipelineBinding(ILogger)
  nameWithType: FhirPipelineBinding.FhirPipelineBinding(ILogger)
  fullName: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.FhirPipelineBinding(Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Bindings/FhirPipelineBinding.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: .ctor
    path: src/Microsoft.Health.Fhir.Proxy/Bindings/FhirPipelineBinding.cs
    startLine: 18
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Bindings
  summary: "\nCreates an instanc of the FhirPipelineBinding.\n"
  example: []
  syntax:
    content: public FhirPipelineBinding(ILogger logger = null)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: Optional logger
    content.vb: Public Sub New(logger As ILogger = Nothing)
  overload: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,Microsoft.Extensions.Logging.ILogger)'
  parent: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding
  langs:
  - csharp
  - vb
  name: FhirPipelineBinding(X509Certificate2, ILogger)
  nameWithType: FhirPipelineBinding.FhirPipelineBinding(X509Certificate2, ILogger)
  fullName: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.FhirPipelineBinding(System.Security.Cryptography.X509Certificates.X509Certificate2, Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Bindings/FhirPipelineBinding.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: .ctor
    path: src/Microsoft.Health.Fhir.Proxy/Bindings/FhirPipelineBinding.cs
    startLine: 29
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Bindings
  summary: "\nCreates an instance of the FhirPipelineBinding.\n"
  example: []
  syntax:
    content: public FhirPipelineBinding(X509Certificate2 certificate, ILogger logger = null)
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: X509 certificate used a security token when calling the FHIR server.
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: Optional logger.
    content.vb: Public Sub New(certificate As X509Certificate2, logger As ILogger = Nothing)
  overload: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.Name
  commentId: P:Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.Name
  id: Name
  parent: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: FhirPipelineBinding.Name
  fullName: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Bindings/FhirPipelineBinding.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: Name
    path: src/Microsoft.Health.Fhir.Proxy/Bindings/FhirPipelineBinding.cs
    startLine: 41
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Bindings
  summary: "\nGets the name of the binding &quot;FhirPipelineBinding&quot;.\n"
  example: []
  syntax:
    content: public override string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property Name As String
  overridden: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding.Name
  overload: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.Name*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.Id
  commentId: P:Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.Id
  id: Id
  parent: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: FhirPipelineBinding.Id
  fullName: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.Id
  type: Property
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Bindings/FhirPipelineBinding.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: Id
    path: src/Microsoft.Health.Fhir.Proxy/Bindings/FhirPipelineBinding.cs
    startLine: 46
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Bindings
  summary: "\nGets a unique ID of the binding instance.\n"
  example: []
  syntax:
    content: public override string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property Id As String
  overridden: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding.Id
  overload: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.Id*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.OnError
  commentId: E:Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.OnError
  id: OnError
  parent: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding
  langs:
  - csharp
  - vb
  name: OnError
  nameWithType: FhirPipelineBinding.OnError
  fullName: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.OnError
  type: Event
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Bindings/FhirPipelineBinding.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: OnError
    path: src/Microsoft.Health.Fhir.Proxy/Bindings/FhirPipelineBinding.cs
    startLine: 51
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Bindings
  summary: "\nAn event that signals an error in the binding.\n"
  example: []
  syntax:
    content: public override event EventHandler<PipelineErrorEventArgs> OnError
    return:
      type: System.EventHandler{Microsoft.Health.Fhir.Proxy.Pipelines.PipelineErrorEventArgs}
    content.vb: Public Overrides Event OnError As EventHandler(Of PipelineErrorEventArgs)
  overridden: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding.OnError
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.OnComplete
  commentId: E:Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.OnComplete
  id: OnComplete
  parent: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding
  langs:
  - csharp
  - vb
  name: OnComplete
  nameWithType: FhirPipelineBinding.OnComplete
  fullName: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.OnComplete
  type: Event
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Bindings/FhirPipelineBinding.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: OnComplete
    path: src/Microsoft.Health.Fhir.Proxy/Bindings/FhirPipelineBinding.cs
    startLine: 56
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Bindings
  summary: "\nAn event that signals the binding has completed.\n"
  example: []
  syntax:
    content: public override event EventHandler<PipelineCompleteEventArgs> OnComplete
    return:
      type: System.EventHandler{Microsoft.Health.Fhir.Proxy.Pipelines.PipelineCompleteEventArgs}
    content.vb: Public Overrides Event OnComplete As EventHandler(Of PipelineCompleteEventArgs)
  overridden: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding.OnComplete
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.ExecuteAsync(Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext)
  commentId: M:Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.ExecuteAsync(Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext)
  id: ExecuteAsync(Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext)
  parent: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding
  langs:
  - csharp
  - vb
  name: ExecuteAsync(OperationContext)
  nameWithType: FhirPipelineBinding.ExecuteAsync(OperationContext)
  fullName: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.ExecuteAsync(Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Bindings/FhirPipelineBinding.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: ExecuteAsync
    path: src/Microsoft.Health.Fhir.Proxy/Bindings/FhirPipelineBinding.cs
    startLine: 63
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Bindings
  summary: "\nExecutes the binding.\n"
  example: []
  syntax:
    content: public override async Task<OperationContext> ExecuteAsync(OperationContext context)
    parameters:
    - id: context
      type: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
      description: Operation context.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext}
      description: Operation context.
    content.vb: Public Overrides Function ExecuteAsync(context As OperationContext) As Task(Of OperationContext)
  overridden: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding.ExecuteAsync(Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext)
  overload: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.ExecuteAsync*
  modifiers.csharp:
  - public
  - override
  - async
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Health.Fhir.Proxy.Bindings
  commentId: N:Microsoft.Health.Fhir.Proxy.Bindings
  name: Microsoft.Health.Fhir.Proxy.Bindings
  nameWithType: Microsoft.Health.Fhir.Proxy.Bindings
  fullName: Microsoft.Health.Fhir.Proxy.Bindings
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding
  commentId: T:Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding
  parent: Microsoft.Health.Fhir.Proxy.Bindings
  name: PipelineBinding
  nameWithType: PipelineBinding
  fullName: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.#ctor*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.#ctor
  name: FhirPipelineBinding
  nameWithType: FhirPipelineBinding.FhirPipelineBinding
  fullName: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.FhirPipelineBinding
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: true
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding.Name
  commentId: P:Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding.Name
  parent: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding
  name: Name
  nameWithType: PipelineBinding.Name
  fullName: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding.Name
- uid: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.Name*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.Name
  name: Name
  nameWithType: FhirPipelineBinding.Name
  fullName: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding.Id
  commentId: P:Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding.Id
  parent: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding
  name: Id
  nameWithType: PipelineBinding.Id
  fullName: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding.Id
- uid: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.Id*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.Id
  name: Id
  nameWithType: FhirPipelineBinding.Id
  fullName: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.Id
- uid: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding.OnError
  commentId: E:Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding.OnError
  parent: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding
  name: OnError
  nameWithType: PipelineBinding.OnError
  fullName: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding.OnError
- uid: System.EventHandler{Microsoft.Health.Fhir.Proxy.Pipelines.PipelineErrorEventArgs}
  commentId: T:System.EventHandler{Microsoft.Health.Fhir.Proxy.Pipelines.PipelineErrorEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<PipelineErrorEventArgs>
  nameWithType: EventHandler<PipelineErrorEventArgs>
  fullName: System.EventHandler<Microsoft.Health.Fhir.Proxy.Pipelines.PipelineErrorEventArgs>
  nameWithType.vb: EventHandler(Of PipelineErrorEventArgs)
  fullName.vb: System.EventHandler(Of Microsoft.Health.Fhir.Proxy.Pipelines.PipelineErrorEventArgs)
  name.vb: EventHandler(Of PipelineErrorEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineErrorEventArgs
    name: PipelineErrorEventArgs
    nameWithType: PipelineErrorEventArgs
    fullName: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineErrorEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineErrorEventArgs
    name: PipelineErrorEventArgs
    nameWithType: PipelineErrorEventArgs
    fullName: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineErrorEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding.OnComplete
  commentId: E:Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding.OnComplete
  parent: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding
  name: OnComplete
  nameWithType: PipelineBinding.OnComplete
  fullName: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding.OnComplete
- uid: System.EventHandler{Microsoft.Health.Fhir.Proxy.Pipelines.PipelineCompleteEventArgs}
  commentId: T:System.EventHandler{Microsoft.Health.Fhir.Proxy.Pipelines.PipelineCompleteEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<PipelineCompleteEventArgs>
  nameWithType: EventHandler<PipelineCompleteEventArgs>
  fullName: System.EventHandler<Microsoft.Health.Fhir.Proxy.Pipelines.PipelineCompleteEventArgs>
  nameWithType.vb: EventHandler(Of PipelineCompleteEventArgs)
  fullName.vb: System.EventHandler(Of Microsoft.Health.Fhir.Proxy.Pipelines.PipelineCompleteEventArgs)
  name.vb: EventHandler(Of PipelineCompleteEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineCompleteEventArgs
    name: PipelineCompleteEventArgs
    nameWithType: PipelineCompleteEventArgs
    fullName: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineCompleteEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineCompleteEventArgs
    name: PipelineCompleteEventArgs
    nameWithType: PipelineCompleteEventArgs
    fullName: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineCompleteEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding.ExecuteAsync(Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext)
  commentId: M:Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding.ExecuteAsync(Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext)
  parent: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding
  name: ExecuteAsync(OperationContext)
  nameWithType: PipelineBinding.ExecuteAsync(OperationContext)
  fullName: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding.ExecuteAsync(Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext)
  spec.csharp:
  - uid: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding.ExecuteAsync(Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext)
    name: ExecuteAsync
    nameWithType: PipelineBinding.ExecuteAsync
    fullName: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding.ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding.ExecuteAsync(Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext)
    name: ExecuteAsync
    nameWithType: PipelineBinding.ExecuteAsync
    fullName: Microsoft.Health.Fhir.Proxy.Bindings.PipelineBinding.ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.ExecuteAsync*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.ExecuteAsync
  name: ExecuteAsync
  nameWithType: FhirPipelineBinding.ExecuteAsync
  fullName: Microsoft.Health.Fhir.Proxy.Bindings.FhirPipelineBinding.ExecuteAsync
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
  commentId: T:Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
  parent: Microsoft.Health.Fhir.Proxy.Pipelines
  name: OperationContext
  nameWithType: OperationContext
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
- uid: System.Threading.Tasks.Task{Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OperationContext>
  nameWithType: Task<OperationContext>
  fullName: System.Threading.Tasks.Task<Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext>
  nameWithType.vb: Task(Of OperationContext)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext)
  name.vb: Task(Of OperationContext)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Fhir.Proxy.Pipelines
  commentId: N:Microsoft.Health.Fhir.Proxy.Pipelines
  name: Microsoft.Health.Fhir.Proxy.Pipelines
  nameWithType: Microsoft.Health.Fhir.Proxy.Pipelines
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks

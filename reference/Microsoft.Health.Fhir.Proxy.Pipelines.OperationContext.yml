### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
  commentId: T:Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
  id: OperationContext
  parent: Microsoft.Health.Fhir.Proxy.Pipelines
  children:
  - Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.#ctor
  - Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.#ctor(System.Net.Http.HttpRequestMessage)
  - Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Content
  - Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.ContentString
  - Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Error
  - Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.IsFatal
  - Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Request
  - Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.StatusCode
  - Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.UpdateRequestUri(System.Net.Http.HttpMethod,System.String,System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: OperationContext
  nameWithType: OperationContext
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
  type: Class
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Pipelines/OperationContext.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: OperationContext
    path: Pipelines/OperationContext.cs
    startLine: 10
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Pipelines
  summary: "\nOperation context used for input and output for a filter in a pipeline.\n"
  example: []
  syntax:
    content: public class OperationContext
    content.vb: Public Class OperationContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Microsoft.Health.Fhir.Proxy.Pipelines.Extensions.ConvertToHttpResponseData(Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.#ctor
  commentId: M:Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.#ctor
  id: '#ctor'
  parent: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
  langs:
  - csharp
  - vb
  name: OperationContext()
  nameWithType: OperationContext.OperationContext()
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.OperationContext()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Pipelines/OperationContext.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: .ctor
    path: Pipelines/OperationContext.cs
    startLine: 15
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Pipelines
  summary: "\nCreates an instance of OperationContext\n"
  example: []
  syntax:
    content: public OperationContext()
    content.vb: Public Sub New
  overload: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.#ctor(System.Net.Http.HttpRequestMessage)
  commentId: M:Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.#ctor(System.Net.Http.HttpRequestMessage)
  id: '#ctor(System.Net.Http.HttpRequestMessage)'
  parent: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
  langs:
  - csharp
  - vb
  name: OperationContext(HttpRequestMessage)
  nameWithType: OperationContext.OperationContext(HttpRequestMessage)
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.OperationContext(System.Net.Http.HttpRequestMessage)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Pipelines/OperationContext.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: .ctor
    path: Pipelines/OperationContext.cs
    startLine: 23
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Pipelines
  summary: "\nCreates an instance of OperationContext\n"
  example: []
  syntax:
    content: public OperationContext(HttpRequestMessage message)
    parameters:
    - id: message
      type: System.Net.Http.HttpRequestMessage
      description: Initial http request message
    content.vb: Public Sub New(message As HttpRequestMessage)
  overload: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Request
  commentId: P:Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Request
  id: Request
  parent: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
  langs:
  - csharp
  - vb
  name: Request
  nameWithType: OperationContext.Request
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Request
  type: Property
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Pipelines/OperationContext.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: Request
    path: Pipelines/OperationContext.cs
    startLine: 34
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Pipelines
  summary: "\nGets or sets an http request.\n"
  example: []
  syntax:
    content: public HttpRequestMessage Request { get; set; }
    parameters: []
    return:
      type: System.Net.Http.HttpRequestMessage
    content.vb: Public Property Request As HttpRequestMessage
  overload: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Request*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.StatusCode
  commentId: P:Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.StatusCode
  id: StatusCode
  parent: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
  langs:
  - csharp
  - vb
  name: StatusCode
  nameWithType: OperationContext.StatusCode
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.StatusCode
  type: Property
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Pipelines/OperationContext.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: StatusCode
    path: Pipelines/OperationContext.cs
    startLine: 39
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Pipelines
  summary: "\nGets or sets the status code for an http response.\n"
  example: []
  syntax:
    content: public HttpStatusCode StatusCode { get; set; }
    parameters: []
    return:
      type: System.Net.HttpStatusCode
    content.vb: Public Property StatusCode As HttpStatusCode
  overload: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.StatusCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Content
  commentId: P:Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Content
  id: Content
  parent: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: OperationContext.Content
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Content
  type: Property
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Pipelines/OperationContext.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: Content
    path: Pipelines/OperationContext.cs
    startLine: 44
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Pipelines
  summary: "\nGets or sets the body content of an http request or response.\n"
  example: []
  syntax:
    content: public byte[] Content { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property Content As Byte()
  overload: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Content*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.ContentString
  commentId: P:Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.ContentString
  id: ContentString
  parent: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
  langs:
  - csharp
  - vb
  name: ContentString
  nameWithType: OperationContext.ContentString
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.ContentString
  type: Property
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Pipelines/OperationContext.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: ContentString
    path: Pipelines/OperationContext.cs
    startLine: 49
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Pipelines
  summary: "\nGets or sets the body content of an http request or response as a string.\n"
  example: []
  syntax:
    content: public string ContentString { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ContentString As String
  overload: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.ContentString*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.IsFatal
  commentId: P:Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.IsFatal
  id: IsFatal
  parent: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
  langs:
  - csharp
  - vb
  name: IsFatal
  nameWithType: OperationContext.IsFatal
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.IsFatal
  type: Property
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Pipelines/OperationContext.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: IsFatal
    path: Pipelines/OperationContext.cs
    startLine: 58
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Pipelines
  summary: "\nGets or sets an indicator that processing of the operation context has a fatal error.\n"
  example: []
  syntax:
    content: public bool IsFatal { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsFatal As Boolean
  overload: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.IsFatal*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Error
  commentId: P:Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Error
  id: Error
  parent: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: OperationContext.Error
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Error
  type: Property
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Pipelines/OperationContext.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: Error
    path: Pipelines/OperationContext.cs
    startLine: 63
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Pipelines
  summary: "\nGets or sets an exception when a fatal error occurs processing the operation context\n"
  example: []
  syntax:
    content: public Exception Error { get; set; }
    parameters: []
    return:
      type: System.Exception
    content.vb: Public Property Error As Exception
  overload: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Error*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.UpdateRequestUri(System.Net.Http.HttpMethod,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.UpdateRequestUri(System.Net.Http.HttpMethod,System.String,System.String,System.String,System.String)
  id: UpdateRequestUri(System.Net.Http.HttpMethod,System.String,System.String,System.String,System.String)
  parent: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
  langs:
  - csharp
  - vb
  name: UpdateRequestUri(HttpMethod, String, String, String, String)
  nameWithType: OperationContext.UpdateRequestUri(HttpMethod, String, String, String, String)
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.UpdateRequestUri(System.Net.Http.HttpMethod, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Pipelines/OperationContext.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: UpdateRequestUri
    path: Pipelines/OperationContext.cs
    startLine: 73
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Pipelines
  summary: "\nUpdates the request URI and method.\n"
  example: []
  syntax:
    content: public void UpdateRequestUri(HttpMethod method, string resource, string id = null, string operation = null, string version = null)
    parameters:
    - id: method
      type: System.Net.Http.HttpMethod
      description: HTTP method, e.g., GET, POST, PUT, DELETE.
    - id: resource
      type: System.String
      description: FHIR resource type.
    - id: id
      type: System.String
      description: Optional FHIR Id
    - id: operation
      type: System.String
      description: Optional FHIR operation
    - id: version
      type: System.String
      description: Optional FHIR version
    content.vb: Public Sub UpdateRequestUri(method As HttpMethod, resource As String, id As String = Nothing, operation As String = Nothing, version As String = Nothing)
  overload: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.UpdateRequestUri*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Health.Fhir.Proxy.Pipelines
  commentId: N:Microsoft.Health.Fhir.Proxy.Pipelines
  name: Microsoft.Health.Fhir.Proxy.Pipelines
  nameWithType: Microsoft.Health.Fhir.Proxy.Pipelines
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Microsoft.Health.Fhir.Proxy.Pipelines.Extensions.ConvertToHttpResponseData(Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
  commentId: M:Microsoft.Health.Fhir.Proxy.Pipelines.Extensions.ConvertToHttpResponseData(Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext,Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
  parent: Microsoft.Health.Fhir.Proxy.Pipelines.Extensions
  definition: Microsoft.Health.Fhir.Proxy.Pipelines.Extensions.ConvertToHttpResponseData(Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext,Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
  name: ConvertToHttpResponseData(HttpRequestData)
  nameWithType: Extensions.ConvertToHttpResponseData(HttpRequestData)
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.Extensions.ConvertToHttpResponseData(Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
  spec.csharp:
  - uid: Microsoft.Health.Fhir.Proxy.Pipelines.Extensions.ConvertToHttpResponseData(Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
    name: ConvertToHttpResponseData
    nameWithType: Extensions.ConvertToHttpResponseData
    fullName: Microsoft.Health.Fhir.Proxy.Pipelines.Extensions.ConvertToHttpResponseData
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Functions.Worker.Http.HttpRequestData
    name: HttpRequestData
    nameWithType: HttpRequestData
    fullName: Microsoft.Azure.Functions.Worker.Http.HttpRequestData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Fhir.Proxy.Pipelines.Extensions.ConvertToHttpResponseData(Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
    name: ConvertToHttpResponseData
    nameWithType: Extensions.ConvertToHttpResponseData
    fullName: Microsoft.Health.Fhir.Proxy.Pipelines.Extensions.ConvertToHttpResponseData
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Azure.Functions.Worker.Http.HttpRequestData
    name: HttpRequestData
    nameWithType: HttpRequestData
    fullName: Microsoft.Azure.Functions.Worker.Http.HttpRequestData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.Extensions.ConvertToHttpResponseData(Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext,Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
  commentId: M:Microsoft.Health.Fhir.Proxy.Pipelines.Extensions.ConvertToHttpResponseData(Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext,Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
  isExternal: true
  name: ConvertToHttpResponseData(OperationContext, HttpRequestData)
  nameWithType: Extensions.ConvertToHttpResponseData(OperationContext, HttpRequestData)
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.Extensions.ConvertToHttpResponseData(Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext, Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
  spec.csharp:
  - uid: Microsoft.Health.Fhir.Proxy.Pipelines.Extensions.ConvertToHttpResponseData(Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext,Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
    name: ConvertToHttpResponseData
    nameWithType: Extensions.ConvertToHttpResponseData
    fullName: Microsoft.Health.Fhir.Proxy.Pipelines.Extensions.ConvertToHttpResponseData
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Functions.Worker.Http.HttpRequestData
    name: HttpRequestData
    nameWithType: HttpRequestData
    fullName: Microsoft.Azure.Functions.Worker.Http.HttpRequestData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Health.Fhir.Proxy.Pipelines.Extensions.ConvertToHttpResponseData(Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext,Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
    name: ConvertToHttpResponseData
    nameWithType: Extensions.ConvertToHttpResponseData
    fullName: Microsoft.Health.Fhir.Proxy.Pipelines.Extensions.ConvertToHttpResponseData
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Azure.Functions.Worker.Http.HttpRequestData
    name: HttpRequestData
    nameWithType: HttpRequestData
    fullName: Microsoft.Azure.Functions.Worker.Http.HttpRequestData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.Extensions
  commentId: T:Microsoft.Health.Fhir.Proxy.Pipelines.Extensions
  parent: Microsoft.Health.Fhir.Proxy.Pipelines
  name: Extensions
  nameWithType: Extensions
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.Extensions
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.#ctor*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.#ctor
  name: OperationContext
  nameWithType: OperationContext.OperationContext
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.OperationContext
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Request*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Request
  name: Request
  nameWithType: OperationContext.Request
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Request
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.StatusCode*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.StatusCode
  name: StatusCode
  nameWithType: OperationContext.StatusCode
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.StatusCode
- uid: System.Net.HttpStatusCode
  commentId: T:System.Net.HttpStatusCode
  parent: System.Net
  isExternal: true
  name: HttpStatusCode
  nameWithType: HttpStatusCode
  fullName: System.Net.HttpStatusCode
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Content*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Content
  name: Content
  nameWithType: OperationContext.Content
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Content
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.ContentString*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.ContentString
  name: ContentString
  nameWithType: OperationContext.ContentString
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.ContentString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.IsFatal*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.IsFatal
  name: IsFatal
  nameWithType: OperationContext.IsFatal
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.IsFatal
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Error*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Error
  name: Error
  nameWithType: OperationContext.Error
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.Error
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.UpdateRequestUri*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.UpdateRequestUri
  name: UpdateRequestUri
  nameWithType: OperationContext.UpdateRequestUri
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext.UpdateRequestUri
- uid: System.Net.Http.HttpMethod
  commentId: T:System.Net.Http.HttpMethod
  parent: System.Net.Http
  isExternal: true
  name: HttpMethod
  nameWithType: HttpMethod
  fullName: System.Net.Http.HttpMethod

### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions
  commentId: T:Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions
  id: AzureFunctionExtensions
  parent: Microsoft.Health.Fhir.Proxy.Pipelines
  children:
  - Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions.ConvertToHttpRequestMesssage(Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
  - Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions.ConvertToHttpResponseData(Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext,Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
  - Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions.GetClaimsPrincipal(Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
  langs:
  - csharp
  - vb
  name: AzureFunctionExtensions
  nameWithType: AzureFunctionExtensions
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Pipelines/AzureFunctionExtensions.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: AzureFunctionExtensions
    path: src/Microsoft.Health.Fhir.Proxy/Pipelines/AzureFunctionExtensions.cs
    startLine: 15
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Pipelines
  summary: "\nHelper extensions for Azure Functions\n"
  example: []
  syntax:
    content: public static class AzureFunctionExtensions
    content.vb: Public Module AzureFunctionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions.ConvertToHttpRequestMesssage(Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
  commentId: M:Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions.ConvertToHttpRequestMesssage(Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
  id: ConvertToHttpRequestMesssage(Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
  isExtensionMethod: true
  parent: Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions
  langs:
  - csharp
  - vb
  name: ConvertToHttpRequestMesssage(HttpRequestData)
  nameWithType: AzureFunctionExtensions.ConvertToHttpRequestMesssage(HttpRequestData)
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions.ConvertToHttpRequestMesssage(Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
  type: Method
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Pipelines/AzureFunctionExtensions.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: ConvertToHttpRequestMesssage
    path: src/Microsoft.Health.Fhir.Proxy/Pipelines/AzureFunctionExtensions.cs
    startLine: 22
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Pipelines
  summary: "\nConverts HttpRequestData to HttpRequestMessage.\n"
  example: []
  syntax:
    content: public static HttpRequestMessage ConvertToHttpRequestMesssage(this HttpRequestData req)
    parameters:
    - id: req
      type: Microsoft.Azure.Functions.Worker.Http.HttpRequestData
      description: HttpRequestData
    return:
      type: System.Net.Http.HttpRequestMessage
      description: HttpRequestMessage
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ConvertToHttpRequestMesssage(req As HttpRequestData) As HttpRequestMessage
  overload: Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions.ConvertToHttpRequestMesssage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions.ConvertToHttpResponseData(Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext,Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
  commentId: M:Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions.ConvertToHttpResponseData(Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext,Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
  id: ConvertToHttpResponseData(Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext,Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
  isExtensionMethod: true
  parent: Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions
  langs:
  - csharp
  - vb
  name: ConvertToHttpResponseData(OperationContext, HttpRequestData)
  nameWithType: AzureFunctionExtensions.ConvertToHttpResponseData(OperationContext, HttpRequestData)
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions.ConvertToHttpResponseData(Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext, Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
  type: Method
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Pipelines/AzureFunctionExtensions.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: ConvertToHttpResponseData
    path: src/Microsoft.Health.Fhir.Proxy/Pipelines/AzureFunctionExtensions.cs
    startLine: 61
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Pipelines
  summary: "\nConverts HttpResponseData to HttpResponseData.\n"
  example: []
  syntax:
    content: public static async Task<HttpResponseData> ConvertToHttpResponseData(this OperationContext context, HttpRequestData request)
    parameters:
    - id: context
      type: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
      description: OperationContext
    - id: request
      type: Microsoft.Azure.Functions.Worker.Http.HttpRequestData
      description: HttpRequestData
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.Functions.Worker.Http.HttpResponseData}
      description: HttpResponseData
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ConvertToHttpResponseData(context As OperationContext, request As HttpRequestData) As Task(Of HttpResponseData)
  overload: Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions.ConvertToHttpResponseData*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions.GetClaimsPrincipal(Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
  commentId: M:Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions.GetClaimsPrincipal(Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
  id: GetClaimsPrincipal(Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
  isExtensionMethod: true
  parent: Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions
  langs:
  - csharp
  - vb
  name: GetClaimsPrincipal(HttpRequestData)
  nameWithType: AzureFunctionExtensions.GetClaimsPrincipal(HttpRequestData)
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions.GetClaimsPrincipal(Microsoft.Azure.Functions.Worker.Http.HttpRequestData)
  type: Method
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Pipelines/AzureFunctionExtensions.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: GetClaimsPrincipal
    path: src/Microsoft.Health.Fhir.Proxy/Pipelines/AzureFunctionExtensions.cs
    startLine: 96
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Pipelines
  summary: "\nGets a ClaimsPrincipal from HttpRequestData.\n"
  example: []
  syntax:
    content: public static ClaimsPrincipal GetClaimsPrincipal(this HttpRequestData request)
    parameters:
    - id: request
      type: Microsoft.Azure.Functions.Worker.Http.HttpRequestData
      description: HttpRequestData
    return:
      type: System.Security.Claims.ClaimsPrincipal
      description: ClaimsPrincipal
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetClaimsPrincipal(request As HttpRequestData) As ClaimsPrincipal
  overload: Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions.GetClaimsPrincipal*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Health.Fhir.Proxy.Pipelines
  commentId: N:Microsoft.Health.Fhir.Proxy.Pipelines
  name: Microsoft.Health.Fhir.Proxy.Pipelines
  nameWithType: Microsoft.Health.Fhir.Proxy.Pipelines
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions.ConvertToHttpRequestMesssage*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions.ConvertToHttpRequestMesssage
  name: ConvertToHttpRequestMesssage
  nameWithType: AzureFunctionExtensions.ConvertToHttpRequestMesssage
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions.ConvertToHttpRequestMesssage
- uid: Microsoft.Azure.Functions.Worker.Http.HttpRequestData
  commentId: T:Microsoft.Azure.Functions.Worker.Http.HttpRequestData
  parent: Microsoft.Azure.Functions.Worker.Http
  isExternal: true
  name: HttpRequestData
  nameWithType: HttpRequestData
  fullName: Microsoft.Azure.Functions.Worker.Http.HttpRequestData
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: Microsoft.Azure.Functions.Worker.Http
  commentId: N:Microsoft.Azure.Functions.Worker.Http
  isExternal: true
  name: Microsoft.Azure.Functions.Worker.Http
  nameWithType: Microsoft.Azure.Functions.Worker.Http
  fullName: Microsoft.Azure.Functions.Worker.Http
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions.ConvertToHttpResponseData*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions.ConvertToHttpResponseData
  name: ConvertToHttpResponseData
  nameWithType: AzureFunctionExtensions.ConvertToHttpResponseData
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions.ConvertToHttpResponseData
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
  commentId: T:Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
  parent: Microsoft.Health.Fhir.Proxy.Pipelines
  name: OperationContext
  nameWithType: OperationContext
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.OperationContext
- uid: System.Threading.Tasks.Task{Microsoft.Azure.Functions.Worker.Http.HttpResponseData}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Azure.Functions.Worker.Http.HttpResponseData}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<HttpResponseData>
  nameWithType: Task<HttpResponseData>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.Functions.Worker.Http.HttpResponseData>
  nameWithType.vb: Task(Of HttpResponseData)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.Functions.Worker.Http.HttpResponseData)
  name.vb: Task(Of HttpResponseData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Functions.Worker.Http.HttpResponseData
    name: HttpResponseData
    nameWithType: HttpResponseData
    fullName: Microsoft.Azure.Functions.Worker.Http.HttpResponseData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Functions.Worker.Http.HttpResponseData
    name: HttpResponseData
    nameWithType: HttpResponseData
    fullName: Microsoft.Azure.Functions.Worker.Http.HttpResponseData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions.GetClaimsPrincipal*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions.GetClaimsPrincipal
  name: GetClaimsPrincipal
  nameWithType: AzureFunctionExtensions.GetClaimsPrincipal
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.AzureFunctionExtensions.GetClaimsPrincipal
- uid: System.Security.Claims.ClaimsPrincipal
  commentId: T:System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: true
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.Security.Claims
  commentId: N:System.Security.Claims
  isExternal: true
  name: System.Security.Claims
  nameWithType: System.Security.Claims
  fullName: System.Security.Claims

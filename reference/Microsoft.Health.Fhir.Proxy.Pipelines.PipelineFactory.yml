### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory
  commentId: T:Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory
  id: PipelineFactory
  parent: Microsoft.Health.Fhir.Proxy.Pipelines
  children:
  - Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Clear
  - Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Create(Microsoft.Health.Fhir.Proxy.Configuration.PipelineSettings)
  - Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Create(System.String)
  - Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.GetNames
  - Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Register(Microsoft.Health.Fhir.Proxy.Pipelines.Pipeline)
  langs:
  - csharp
  - vb
  name: PipelineFactory
  nameWithType: PipelineFactory
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Pipelines/PipelineFactory.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: PipelineFactory
    path: Pipelines/PipelineFactory.cs
    startLine: 8
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Pipelines
  syntax:
    content: public abstract class PipelineFactory
    content.vb: Public MustInherit Class PipelineFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.GetNames
  commentId: M:Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.GetNames
  id: GetNames
  parent: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory
  langs:
  - csharp
  - vb
  name: GetNames()
  nameWithType: PipelineFactory.GetNames()
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.GetNames()
  type: Method
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Pipelines/PipelineFactory.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: GetNames
    path: Pipelines/PipelineFactory.cs
    startLine: 17
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Pipelines
  syntax:
    content: public static string[] GetNames()
    return:
      type: System.String[]
    content.vb: Public Shared Function GetNames As String()
  overload: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.GetNames*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Clear
  commentId: M:Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Clear
  id: Clear
  parent: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: PipelineFactory.Clear()
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Clear()
  type: Method
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Pipelines/PipelineFactory.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: Clear
    path: Pipelines/PipelineFactory.cs
    startLine: 22
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Pipelines
  syntax:
    content: public static void Clear()
    content.vb: Public Shared Sub Clear
  overload: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Clear*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Register(Microsoft.Health.Fhir.Proxy.Pipelines.Pipeline)
  commentId: M:Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Register(Microsoft.Health.Fhir.Proxy.Pipelines.Pipeline)
  id: Register(Microsoft.Health.Fhir.Proxy.Pipelines.Pipeline)
  parent: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory
  langs:
  - csharp
  - vb
  name: Register(Pipeline)
  nameWithType: PipelineFactory.Register(Pipeline)
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Register(Microsoft.Health.Fhir.Proxy.Pipelines.Pipeline)
  type: Method
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Pipelines/PipelineFactory.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: Register
    path: Pipelines/PipelineFactory.cs
    startLine: 27
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Pipelines
  syntax:
    content: public static void Register(Pipeline pipeline)
    parameters:
    - id: pipeline
      type: Microsoft.Health.Fhir.Proxy.Pipelines.Pipeline
    content.vb: Public Shared Sub Register(pipeline As Pipeline)
  overload: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Register*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Create(Microsoft.Health.Fhir.Proxy.Configuration.PipelineSettings)
  commentId: M:Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Create(Microsoft.Health.Fhir.Proxy.Configuration.PipelineSettings)
  id: Create(Microsoft.Health.Fhir.Proxy.Configuration.PipelineSettings)
  parent: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory
  langs:
  - csharp
  - vb
  name: Create(PipelineSettings)
  nameWithType: PipelineFactory.Create(PipelineSettings)
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Create(Microsoft.Health.Fhir.Proxy.Configuration.PipelineSettings)
  type: Method
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Pipelines/PipelineFactory.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: Create
    path: Pipelines/PipelineFactory.cs
    startLine: 37
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Pipelines
  syntax:
    content: public static Pipeline Create(PipelineSettings settings)
    parameters:
    - id: settings
      type: Microsoft.Health.Fhir.Proxy.Configuration.PipelineSettings
    return:
      type: Microsoft.Health.Fhir.Proxy.Pipelines.Pipeline
    content.vb: Public Shared Function Create(settings As PipelineSettings) As Pipeline
  overload: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Create(System.String)
  commentId: M:Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Create(System.String)
  id: Create(System.String)
  parent: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory
  langs:
  - csharp
  - vb
  name: Create(String)
  nameWithType: PipelineFactory.Create(String)
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Create(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Pipelines/PipelineFactory.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: Create
    path: Pipelines/PipelineFactory.cs
    startLine: 65
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Pipelines
  syntax:
    content: public static Pipeline Create(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Health.Fhir.Proxy.Pipelines.Pipeline
    content.vb: Public Shared Function Create(name As String) As Pipeline
  overload: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Health.Fhir.Proxy.Pipelines
  commentId: N:Microsoft.Health.Fhir.Proxy.Pipelines
  name: Microsoft.Health.Fhir.Proxy.Pipelines
  nameWithType: Microsoft.Health.Fhir.Proxy.Pipelines
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.GetNames*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.GetNames
  name: GetNames
  nameWithType: PipelineFactory.GetNames
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.GetNames
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Clear*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Clear
  name: Clear
  nameWithType: PipelineFactory.Clear
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Clear
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Register*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Register
  name: Register
  nameWithType: PipelineFactory.Register
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Register
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.Pipeline
  commentId: T:Microsoft.Health.Fhir.Proxy.Pipelines.Pipeline
  parent: Microsoft.Health.Fhir.Proxy.Pipelines
  name: Pipeline
  nameWithType: Pipeline
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.Pipeline
- uid: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Create*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Create
  name: Create
  nameWithType: PipelineFactory.Create
  fullName: Microsoft.Health.Fhir.Proxy.Pipelines.PipelineFactory.Create
- uid: Microsoft.Health.Fhir.Proxy.Configuration.PipelineSettings
  commentId: T:Microsoft.Health.Fhir.Proxy.Configuration.PipelineSettings
  parent: Microsoft.Health.Fhir.Proxy.Configuration
  name: PipelineSettings
  nameWithType: PipelineSettings
  fullName: Microsoft.Health.Fhir.Proxy.Configuration.PipelineSettings
- uid: Microsoft.Health.Fhir.Proxy.Configuration
  commentId: N:Microsoft.Health.Fhir.Proxy.Configuration
  name: Microsoft.Health.Fhir.Proxy.Configuration
  nameWithType: Microsoft.Health.Fhir.Proxy.Configuration
  fullName: Microsoft.Health.Fhir.Proxy.Configuration
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

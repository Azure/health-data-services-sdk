### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs
  commentId: T:Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs
  id: ChannelOpenEventArgs
  parent: Microsoft.Health.Fhir.Proxy.Channels
  children:
  - Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.#ctor(System.String,System.String,System.Object)
  - Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.Id
  - Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.Message
  - Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.Name
  langs:
  - csharp
  - vb
  name: ChannelOpenEventArgs
  nameWithType: ChannelOpenEventArgs
  fullName: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs
  type: Class
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Channels/ChannelOpenEventArgs.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: ChannelOpenEventArgs
    path: src/Microsoft.Health.Fhir.Proxy/Channels/ChannelOpenEventArgs.cs
    startLine: 7
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Channels
  summary: "\nEvents args for channel open events.\n"
  example: []
  syntax:
    content: 'public class ChannelOpenEventArgs : EventArgs'
    content.vb: >-
      Public Class ChannelOpenEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.#ctor(System.String,System.String,System.Object)
  commentId: M:Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.#ctor(System.String,System.String,System.Object)
  id: '#ctor(System.String,System.String,System.Object)'
  parent: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs
  langs:
  - csharp
  - vb
  name: ChannelOpenEventArgs(String, String, Object)
  nameWithType: ChannelOpenEventArgs.ChannelOpenEventArgs(String, String, Object)
  fullName: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.ChannelOpenEventArgs(System.String, System.String, System.Object)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Channels/ChannelOpenEventArgs.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: .ctor
    path: src/Microsoft.Health.Fhir.Proxy/Channels/ChannelOpenEventArgs.cs
    startLine: 15
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Channels
  summary: "\nCreates an instance of ChannelOpenEventArgs.\n"
  example: []
  syntax:
    content: public ChannelOpenEventArgs(string id, string name, dynamic message)
    parameters:
    - id: id
      type: System.String
      description: Channel instance ID.
    - id: name
      type: System.String
      description: Channel name.
    - id: message
      type: System.Object
      description: Message received when opening the channel.
    content.vb: Public Sub New(id As String, name As String, message As Object)
  overload: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.Id
  commentId: P:Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.Id
  id: Id
  parent: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ChannelOpenEventArgs.Id
  fullName: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.Id
  type: Property
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Channels/ChannelOpenEventArgs.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: Id
    path: src/Microsoft.Health.Fhir.Proxy/Channels/ChannelOpenEventArgs.cs
    startLine: 25
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Channels
  summary: "\nGets the channel instance ID.\n"
  example: []
  syntax:
    content: public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Id As String
  overload: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.Name
  commentId: P:Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.Name
  id: Name
  parent: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ChannelOpenEventArgs.Name
  fullName: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Channels/ChannelOpenEventArgs.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: Name
    path: src/Microsoft.Health.Fhir.Proxy/Channels/ChannelOpenEventArgs.cs
    startLine: 30
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Channels
  summary: "\nGets the channel name.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.Message
  commentId: P:Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.Message
  id: Message
  parent: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: ChannelOpenEventArgs.Message
  fullName: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.Message
  type: Property
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Channels/ChannelOpenEventArgs.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: Message
    path: src/Microsoft.Health.Fhir.Proxy/Channels/ChannelOpenEventArgs.cs
    startLine: 35
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Channels
  summary: "\nGets the message (optional) when the channel is opened.\n"
  example: []
  syntax:
    content: public dynamic Message { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Message As Object
  overload: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.Message*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Health.Fhir.Proxy.Channels
  commentId: N:Microsoft.Health.Fhir.Proxy.Channels
  name: Microsoft.Health.Fhir.Proxy.Channels
  nameWithType: Microsoft.Health.Fhir.Proxy.Channels
  fullName: Microsoft.Health.Fhir.Proxy.Channels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.#ctor*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.#ctor
  name: ChannelOpenEventArgs
  nameWithType: ChannelOpenEventArgs.ChannelOpenEventArgs
  fullName: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.ChannelOpenEventArgs
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.Id*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.Id
  name: Id
  nameWithType: ChannelOpenEventArgs.Id
  fullName: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.Id
- uid: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.Name*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.Name
  name: Name
  nameWithType: ChannelOpenEventArgs.Name
  fullName: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.Name
- uid: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.Message*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.Message
  name: Message
  nameWithType: ChannelOpenEventArgs.Message
  fullName: Microsoft.Health.Fhir.Proxy.Channels.ChannelOpenEventArgs.Message

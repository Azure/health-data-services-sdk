### YamlMime:ManagedReference
items:
- uid: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs
  commentId: T:Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs
  id: ChannelErrorEventArgs
  parent: Microsoft.Health.Fhir.Proxy.Channels
  children:
  - Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.#ctor(System.String,System.String,System.Exception)
  - Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.Error
  - Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.Id
  - Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.Name
  langs:
  - csharp
  - vb
  name: ChannelErrorEventArgs
  nameWithType: ChannelErrorEventArgs
  fullName: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs
  type: Class
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Channels/ChannelErrorEventArgs.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: ChannelErrorEventArgs
    path: src/Microsoft.Health.Fhir.Proxy/Channels/ChannelErrorEventArgs.cs
    startLine: 7
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Channels
  summary: "\nEvents args for channel error events.\n"
  example: []
  syntax:
    content: 'public class ChannelErrorEventArgs : EventArgs'
    content.vb: >-
      Public Class ChannelErrorEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.#ctor(System.String,System.String,System.Exception)
  commentId: M:Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.#ctor(System.String,System.String,System.Exception)
  id: '#ctor(System.String,System.String,System.Exception)'
  parent: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs
  langs:
  - csharp
  - vb
  name: ChannelErrorEventArgs(String, String, Exception)
  nameWithType: ChannelErrorEventArgs.ChannelErrorEventArgs(String, String, Exception)
  fullName: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.ChannelErrorEventArgs(System.String, System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Channels/ChannelErrorEventArgs.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: .ctor
    path: src/Microsoft.Health.Fhir.Proxy/Channels/ChannelErrorEventArgs.cs
    startLine: 15
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Channels
  summary: "\nCreates an instance of ChannelErrorEventArgs.\n"
  example: []
  syntax:
    content: public ChannelErrorEventArgs(string id, string name, Exception error)
    parameters:
    - id: id
      type: System.String
      description: Unique ID of the channel instance.
    - id: name
      type: System.String
      description: Name of the channel.
    - id: error
      type: System.Exception
      description: Exception that occurred in the channel.
    content.vb: Public Sub New(id As String, name As String, error As Exception)
  overload: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.Id
  commentId: P:Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.Id
  id: Id
  parent: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ChannelErrorEventArgs.Id
  fullName: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.Id
  type: Property
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Channels/ChannelErrorEventArgs.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: Id
    path: src/Microsoft.Health.Fhir.Proxy/Channels/ChannelErrorEventArgs.cs
    startLine: 25
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Channels
  summary: "\nGets channel instance ID.\n"
  example: []
  syntax:
    content: public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Id As String
  overload: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.Name
  commentId: P:Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.Name
  id: Name
  parent: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ChannelErrorEventArgs.Name
  fullName: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Channels/ChannelErrorEventArgs.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: Name
    path: src/Microsoft.Health.Fhir.Proxy/Channels/ChannelErrorEventArgs.cs
    startLine: 30
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Channels
  summary: "\nGets name of the channel.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.Error
  commentId: P:Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.Error
  id: Error
  parent: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: ChannelErrorEventArgs.Error
  fullName: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.Error
  type: Property
  source:
    remote:
      path: src/Microsoft.Health.Fhir.Proxy/Channels/ChannelErrorEventArgs.cs
      branch: malong/1042
      repo: https://smokejumpers@dev.azure.com/smokejumpers/HealthArchitectures/_git/microsoft-fhir-proxy
    id: Error
    path: src/Microsoft.Health.Fhir.Proxy/Channels/ChannelErrorEventArgs.cs
    startLine: 35
  assemblies:
  - Microsoft.Health.Fhir.Proxy
  namespace: Microsoft.Health.Fhir.Proxy.Channels
  summary: "\nGets error that occurred in the channel.\n"
  example: []
  syntax:
    content: public Exception Error { get; }
    parameters: []
    return:
      type: System.Exception
    content.vb: Public ReadOnly Property Error As Exception
  overload: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.Error*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Health.Fhir.Proxy.Channels
  commentId: N:Microsoft.Health.Fhir.Proxy.Channels
  name: Microsoft.Health.Fhir.Proxy.Channels
  nameWithType: Microsoft.Health.Fhir.Proxy.Channels
  fullName: Microsoft.Health.Fhir.Proxy.Channels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.#ctor*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.#ctor
  name: ChannelErrorEventArgs
  nameWithType: ChannelErrorEventArgs.ChannelErrorEventArgs
  fullName: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.ChannelErrorEventArgs
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.Id*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.Id
  name: Id
  nameWithType: ChannelErrorEventArgs.Id
  fullName: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.Id
- uid: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.Name*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.Name
  name: Name
  nameWithType: ChannelErrorEventArgs.Name
  fullName: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.Name
- uid: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.Error*
  commentId: Overload:Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.Error
  name: Error
  nameWithType: ChannelErrorEventArgs.Error
  fullName: Microsoft.Health.Fhir.Proxy.Channels.ChannelErrorEventArgs.Error

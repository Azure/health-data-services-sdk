trigger: 
  branches:
    include: 
    - main
    - malong/*
pool:
  vmImage: windows-2022

variables:
- group: microsoft-fhir-proxy-ci-vars
- name: major
  value: '0'
- name: minor
  value: '0'
- name: patch
  value: $[counter(format('{0}.{1}',variables['major'],variables['minor']),0)]
- name: packageversiontype
  value: '-prerelease'
- name: packageversion
  value: '$(major).$(minor).$(patch)$(packageversiontype)'
- name: packageversion-prerelease
  value: '$(prerelease-major).$(prerelease-minor).$(prerelease-patch)$(packageversiontype)'
- name: packageversion-release
  value: '$(release-major).$(release-minor).$(release-patch)'

steps:
- task: AzureKeyVault@1
  inputs:
    azureSubscription: 'Smokejumper_Build (c80648b9-edf0-400f-bc0f-ba937fe9527f)'
    KeyVaultName: 'fhir-proxy-ci-vault'
    SecretsFilter: '*'
    RunAsPreJob: true

- task: AzureCLI@2
  displayName: 'Set Environment Variables'
  inputs:
    azureSubscription: 'Smokejumper_Build (c80648b9-edf0-400f-bc0f-ba937fe9527f)'
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    inlineScript: |        
        Write-Host "##vso[task.setvariable variable=PROXY_TenantId]$(proxy-tenant-id)"
        Write-Host "##vso[task.setvariable variable=PROXY_ClientId]$(kv-client-id)"
        Write-Host "##vso[task.setvariable variable=PROXY_ClientSecret]$(kv-client-secret)"
        Write-Host "##vso[task.setvariable variable=PROXY_FhirServerUrl]$(fhir-api-url)"
        Write-Host "##vso[task.setvariable variable=PROXY_KeyVaultUri]$(proxy-key-vault-uri)"
        Write-Host "##vso[task.setvariable variable=PROXY_KeyVaultCertificateName]$(proxy-key-vault-certificate-name)"
        Write-Host "##vso[task.setvariable variable=PROXY_InstrumentationKey]$(proxy-instrumentation-key)"
        Write-Host "##vso[task.setvariable variable=PROXY_LoggingLevel]$(proxy-log-level)"        
        Write-Host "##vso[task.setvariable variable=STORAGE_CONNECTIONSTRING]$(storage-connectionstring-test)"        
        Write-Host "##vso[task.setvariable variable=PROXY_EventHubBlobConnectionString]$(proxy-storage-connectionstring)"
        Write-Host "##vso[task.setvariable variable=PROXY_EventHubProcessorContainer]$(proxy-eventhub-processorcontainer-name)"
        Write-Host "##vso[task.setvariable variable=PROXY_EventHubBlobContainer]$(proxy-eventhub-blobcontainer-name)"
        Write-Host "##vso[task.setvariable variable=PROXY_EventHubSku]$(proxy-eventhub-sku)"
        Write-Host "##vso[task.setvariable variable=PROXY_STORAGE_CONNECTIONSTRING]$(proxy-storage-connectionstring)"
        Write-Host "##vso[task.setvariable variable=PROXY_EventHubName]$(proxy-eventhub-name)"
        Write-Host "##vso[task.setvariable variable=PROXY_EventHubConnectionString]$(proxy-eventhub-connectionstring)"
        Write-Host "##vso[task.setvariable variable=PROXY_ServiceBusConnectionString]$(proxy-servicebus-connectionstring)"
        Write-Host "##vso[task.setvariable variable=PROXY_ServiceBusTopic]$(proxy-servicebus-topic)"
        Write-Host "##vso[task.setvariable variable=PROXY_ServiceBusSubscription]$(proxy-servicebus-subscription)"
        Write-Host "##vso[task.setvariable variable=PROXY_ServiceBusSku]$(proxy-servicebus-sku)"
        Write-Host "##vso[task.setvariable variable=PROXY_ServiceBusBlobConnectionString]$(proxy-storage-connectionstring)"
        Write-Host "##vso[task.setvariable variable=PROXY_ServiceBusBlobContainer]$(proxy-servicebus-blobcontainer-name)"
        Write-Host "##vso[task.setvariable variable=PROXY_BlobStorageChannelConnectionString]$(proxy-storage-connectionstring)"
        Write-Host "##vso[task.setvariable variable=PROXY_BlobStorageChannelContainer]$(proxy-blobchannel-container-name)"
        Write-Host "##vso[task.setvariable variable=PROXY_EventGridSubject]$(proxy-eventgrid-subject)"
        Write-Host "##vso[task.setvariable variable=PROXY_EventGridEventType]$(proxy-eventgrid-eventtype)"
        Write-Host "##vso[task.setvariable variable=PROXY_EventGridDataVersion]$(proxy-eventgrid-dataversion)"
        Write-Host "##vso[task.setvariable variable=PROXY_EventGridTopicUriString]$(proxy-eventgrid-topicuristring)"
        Write-Host "##vso[task.setvariable variable=PROXY_EventGridTopicAccessKey]$(proxy-eventgrid-topicaccesskey)"
        Write-Host "##vso[task.setvariable variable=PROXY_EventGridBlobConnectionString]$(proxy-eventgrid-blobconnectionstring)"
        Write-Host "##vso[task.setvariable variable=PROXY_EventGridBlobContainer]$(proxy-eventgrid-blobcontainer)"
        Write-Host "##vso[task.setvariable variable=PROXY_EventGrid_Message_Queue]$(eventgrid-message-queue)"
        Write-Host "##vso[task.setvariable variable=PROXY_EventGrid_Reference_Queue]$(eventgrid-reference-queue)"
        Write-Host "##vso[task.setvariable variable=PROXY_CacheConnectionString]$(cicd-redis-cache-connectionstring)"
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '2.x'
- task: UseDotNet@2
  displayName: 'Install dotnet 6.0.x agent tools dir'
  inputs:
    packageType: 'sdk'
    version: '6.0.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: UseDotNet@2
  displayName: 'Install dotnet 3.1.x SDK'
  inputs:
    packageType: 'sdk'
    version: '3.1.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: NuGetToolInstaller@1
  inputs:
    versionSpec: '5.8.x'
    checkLatest: true

- task: CredScan@3
  inputs:
    outputFormat: 'csv'
    toolVersion: Latest
    verboseOutput: true

- task: DotNetCoreCLI@2
  displayName: 'Install dotnet format'
  inputs:
    command: 'custom'
    custom: 'tool'
    arguments: 'update -g dotnet-format'

- script: 'dotnet format ./src/build.sln --verify-no-changes -v d'
  displayName: 'dotnet format lint'

#- script: 'dotnet tool update -g dotnet-format && dotnet format ./src/Build.sln whitespace'
#  displayName: 'Lint dotnet whitespace'

#- script:  'dotnet-format ./src/build.sln --check -v diagnostic'
#  displayName: 'Lint dotnet'

#- script: 'dotnet format ./src/Build.sln analyzers'
#  displayName: 'Lint dotnet analyzers'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration) --no-incremental'
    projects: '**/src/**/*.csproj'
  displayName: 'dotnet build $(buildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    arguments: '--no-build --configuration $(buildConfiguration)'
    publishTestResults: true
    projects: '**/tests/**/*.csproj'
  displayName: 'Run unit tests - $(buildConfiguration)'
- task: EsrpCodeSigning@1
  displayName: 'Sign Proxy'
  inputs:
    ConnectedServiceName: 'ESRP Code Signing'
    FolderPath: '$(Build.SourcesDirectory)/src/Fhir.Proxy/bin/Release/net6.0'
    Pattern: 'Fhir.Proxy.dll'
    UseMinimatch: true
    signConfigType: 'inlineSignParams'
    inlineOperation: |
      [
                        {
                          "keyCode": "CP-230012",
                          "operationSetCode": "SigntoolSign",
                          "parameters": [
                            {
                              "parameterName": "OpusName",
                              "parameterValue": "Microsoft"
                            },
                            {
                              "parameterName": "OpusInfo",
                              "parameterValue": "http://www.microsoft.com"
                            },
                            {
                              "parameterName": "PageHash",
                              "parameterValue": "/NPH"
                            },
                            {
                              "parameterName": "FileDigest",
                              "parameterValue": "/fd sha256"
                            },
                            {
                              "parameterName": "TimeStamp",
                              "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                            }
                          ],
                          "toolName": "signtool.exe",
                          "toolVersion": "6.2.9304.0"
                        }
                      ]
    SessionTimeout: '60'
    MaxConcurrency: '50'
    MaxRetryAttempts: '5'

- task: EsrpCodeSigning@1
  displayName: 'Sign Storage'
  inputs:
    ConnectedServiceName: 'ESRP Code Signing'
    FolderPath: '$(Build.SourcesDirectory)/src/Fhir.Proxy.Storage/bin/Release/net6.0'
    Pattern: 'Fhir.Proxy.Storage.dll'
    UseMinimatch: true
    signConfigType: 'inlineSignParams'
    inlineOperation: |
      [
                        {
                          "keyCode": "CP-230012",
                          "operationSetCode": "SigntoolSign",
                          "parameters": [
                            {
                              "parameterName": "OpusName",
                              "parameterValue": "Microsoft"
                            },
                            {
                              "parameterName": "OpusInfo",
                              "parameterValue": "http://www.microsoft.com"
                            },
                            {
                              "parameterName": "PageHash",
                              "parameterValue": "/NPH"
                            },
                            {
                              "parameterName": "FileDigest",
                              "parameterValue": "/fd sha256"
                            },
                            {
                              "parameterName": "TimeStamp",
                              "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                            }
                          ],
                          "toolName": "signtool.exe",
                          "toolVersion": "6.2.9304.0"
                        }
                      ]
    SessionTimeout: '60'
    MaxConcurrency: '50'
    MaxRetryAttempts: '5'

- task: EsrpCodeSigning@1
  displayName: 'Sign Channels'
  inputs:
    ConnectedServiceName: 'ESRP Code Signing'
    FolderPath: '$(Build.SourcesDirectory)/src/Fhir.Proxy.Extensions.Channels/bin/Release/net6.0'
    Pattern: 'Fhir.Proxy.Extensions.Channels.dll'
    UseMinimatch: true
    signConfigType: 'inlineSignParams'
    inlineOperation: |
      [
                        {
                          "keyCode": "CP-230012",
                          "operationSetCode": "SigntoolSign",
                          "parameters": [
                            {
                              "parameterName": "OpusName",
                              "parameterValue": "Microsoft"
                            },
                            {
                              "parameterName": "OpusInfo",
                              "parameterValue": "http://www.microsoft.com"
                            },
                            {
                              "parameterName": "PageHash",
                              "parameterValue": "/NPH"
                            },
                            {
                              "parameterName": "FileDigest",
                              "parameterValue": "/fd sha256"
                            },
                            {
                              "parameterName": "TimeStamp",
                              "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                            }
                          ],
                          "toolName": "signtool.exe",
                          "toolVersion": "6.2.9304.0"
                        }
                      ]
    SessionTimeout: '60'
    MaxConcurrency: '50'
    MaxRetryAttempts: '5'

- task: EsrpCodeSigning@1
  displayName: 'Sign Caching'
  inputs:
    ConnectedServiceName: 'ESRP Code Signing'
    FolderPath: '$(Build.SourcesDirectory)/src/Fhir.Proxy.Caching/bin/Release/net6.0'
    Pattern: 'Fhir.Proxy.Caching.dll'
    UseMinimatch: true
    signConfigType: 'inlineSignParams'
    inlineOperation: |
      [
                        {
                          "keyCode": "CP-230012",
                          "operationSetCode": "SigntoolSign",
                          "parameters": [
                            {
                              "parameterName": "OpusName",
                              "parameterValue": "Microsoft"
                            },
                            {
                              "parameterName": "OpusInfo",
                              "parameterValue": "http://www.microsoft.com"
                            },
                            {
                              "parameterName": "PageHash",
                              "parameterValue": "/NPH"
                            },
                            {
                              "parameterName": "FileDigest",
                              "parameterValue": "/fd sha256"
                            },
                            {
                              "parameterName": "TimeStamp",
                              "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                            }
                          ],
                          "toolName": "signtool.exe",
                          "toolVersion": "6.2.9304.0"
                        }
                      ]
    SessionTimeout: '60'
    MaxConcurrency: '50'
    MaxRetryAttempts: '5'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true
    OverWrite: true
  
- task: DotNetCoreCLI@2
  displayName: "dotnet pack Proxy Local Feed"
  inputs:
    command: 'pack'
    arguments: '--configuration $(buildConfiguration)'
    packagesToPack: '**/Fhir.Proxy.csproj'
    nobuild: true
    versioningScheme: 'byEnvVar'
    versionEnvVar: packageversion

- task: DotNetCoreCLI@2
  displayName: "dotnet pack Proxy Prerelease"
  inputs:
    command: 'pack'
    arguments: '--configuration $(buildConfiguration)'
    packagesToPack: '**/Fhir.Proxy.csproj'
    nobuild: true
    versioningScheme: 'byEnvVar'
    versionEnvVar: packageversion-prerelease
    packDirectory: '$(Build.ArtifactStagingDirectory)'

- task: EsrpCodeSigning@1
  displayName: 'Sign Proxy NuGet Prerelease'
  inputs:
    ConnectedServiceName: 'ESRP Code Signing'
    FolderPath: '$(Build.ArtifactStagingDirectory)'
    Pattern: 'Microsoft.Health.Fhir.Proxy.$(packageversion-prerelease).Core.nupkg'
    UseMinimatch: true
    signConfigType: 'inlineSignParams'
    inlineOperation: |
      [
                   {
                       "keyCode": "CP-401405",
                       "operationSetCode": "NuGetSign",
                       "parameters": [ ],
                       "toolName": "sign",
                       "toolVersion": "1.0"
                   },
                   {
                       "keyCode": "CP-401405",
                       "operationSetCode": "NuGetVerify",
                       "parameters": [ ],
                       "toolName": "sign",
                       "toolVersion": "1.0"
                   }
                 ]
    SessionTimeout: '60'
    MaxConcurrency: '50'
    MaxRetryAttempts: '5'


- task: DotNetCoreCLI@2
  displayName: "dotnet pack Proxy Release"
  inputs:
    command: 'pack'
    arguments: '--configuration $(buildConfiguration)'
    packagesToPack: '**/Fhir.Proxy.csproj'
    nobuild: true
    versioningScheme: 'byEnvVar'
    versionEnvVar: packageversion-release
    packDirectory: '$(Build.ArtifactStagingDirectory)'

- task: EsrpCodeSigning@1
  displayName: 'Sign Proxy NuGet Release'
  inputs:
    ConnectedServiceName: 'ESRP Code Signing'
    FolderPath: '$(Build.ArtifactStagingDirectory)'
    Pattern: 'Microsoft.Health.Fhir.Proxy.$(packageversion-release).Core.nupkg'
    UseMinimatch: true
    signConfigType: 'inlineSignParams'
    inlineOperation: |
      [
                   {
                       "keyCode": "CP-401405",
                       "operationSetCode": "NuGetSign",
                       "parameters": [ ],
                       "toolName": "sign",
                       "toolVersion": "1.0"
                   },
                   {
                       "keyCode": "CP-401405",
                       "operationSetCode": "NuGetVerify",
                       "parameters": [ ],
                       "toolName": "sign",
                       "toolVersion": "1.0"
                   }
                 ]
    SessionTimeout: '60'
    MaxConcurrency: '50'
    MaxRetryAttempts: '5'

- task: DotNetCoreCLI@2
  displayName: "dotnet pack Channels"
  inputs:
    command: 'pack'
    arguments: '--configuration $(buildConfiguration)'
    packagesToPack: '**/Fhir.Proxy.Extensions.Channels.csproj'
    nobuild: true
    versioningScheme: 'byEnvVar'
    versionEnvVar: packageversion


- task: DotNetCoreCLI@2
  displayName: "dotnet pack Channels Prerelease"
  inputs:
    command: 'pack'
    arguments: '--configuration $(buildConfiguration)'
    packagesToPack: '**/Fhir.Proxy.Extensions.Channels.csproj'
    nobuild: true
    versioningScheme: 'byEnvVar'
    versionEnvVar: packageversion-prerelease
    packDirectory: '$(Build.ArtifactStagingDirectory)'

- task: EsrpCodeSigning@1
  displayName: 'Sign Channels NuGet Prerelease'
  inputs:
    ConnectedServiceName: 'ESRP Code Signing'
    FolderPath: '$(Build.ArtifactStagingDirectory)'
    Pattern: 'Microsoft.Health.Fhir.Proxy.Extensions.Channels.$(packageversion-prerelease).nupkg'
    UseMinimatch: true
    signConfigType: 'inlineSignParams'
    inlineOperation: |
      [
                   {
                       "keyCode": "CP-401405",
                       "operationSetCode": "NuGetSign",
                       "parameters": [ ],
                       "toolName": "sign",
                       "toolVersion": "1.0"
                   },
                   {
                       "keyCode": "CP-401405",
                       "operationSetCode": "NuGetVerify",
                       "parameters": [ ],
                       "toolName": "sign",
                       "toolVersion": "1.0"
                   }
                 ]
    SessionTimeout: '60'
    MaxConcurrency: '50'
    MaxRetryAttempts: '5'


- task: DotNetCoreCLI@2
  displayName: "dotnet pack Channels Release"
  inputs:
    command: 'pack'
    arguments: '--configuration $(buildConfiguration)'
    packagesToPack: '**/Fhir.Proxy.Extensions.Channels.csproj'
    nobuild: true
    versioningScheme: 'byEnvVar'
    versionEnvVar: packageversion-release
    packDirectory: '$(Build.ArtifactStagingDirectory)'

- task: EsrpCodeSigning@1
  displayName: 'Sign Channels NuGet Release'
  inputs:
    ConnectedServiceName: 'ESRP Code Signing'
    FolderPath: '$(Build.ArtifactStagingDirectory)'
    Pattern: 'Microsoft.Health.Fhir.Proxy.Extensions.Channels.$(packageversion-release).nupkg'
    UseMinimatch: true
    signConfigType: 'inlineSignParams'
    inlineOperation: |
      [
                   {
                       "keyCode": "CP-401405",
                       "operationSetCode": "NuGetSign",
                       "parameters": [ ],
                       "toolName": "sign",
                       "toolVersion": "1.0"
                   },
                   {
                       "keyCode": "CP-401405",
                       "operationSetCode": "NuGetVerify",
                       "parameters": [ ],
                       "toolName": "sign",
                       "toolVersion": "1.0"
                   }
                 ]
    SessionTimeout: '60'
    MaxConcurrency: '50'
    MaxRetryAttempts: '5'

- task: DotNetCoreCLI@2
  displayName: "dotnet pack Storage"
  inputs:
    command: 'pack'
    arguments: '--configuration $(buildConfiguration)'
    packagesToPack: '**/Fhir.Proxy.Storage.csproj'
    nobuild: true
    versioningScheme: 'byEnvVar'
    versionEnvVar: packageversion

- task: DotNetCoreCLI@2
  displayName: "dotnet pack Storage Prerelease"
  inputs:
    command: 'pack'
    arguments: '--configuration $(buildConfiguration)'
    packagesToPack: '**/Fhir.Proxy.Storage.csproj'
    nobuild: true
    versioningScheme: 'byEnvVar'
    versionEnvVar: packageversion-prerelease
    packDirectory: '$(Build.ArtifactStagingDirectory)'

- task: EsrpCodeSigning@1
  displayName: 'Sign Storage NuGet Prerelease'
  inputs:
    ConnectedServiceName: 'ESRP Code Signing'
    FolderPath: '$(Build.ArtifactStagingDirectory)'
    Pattern: 'Microsoft.Health.Fhir.Proxy.Storage.$(packageversion-prerelease).nupkg'
    UseMinimatch: true
    signConfigType: 'inlineSignParams'
    inlineOperation: |
      [
                   {
                       "keyCode": "CP-401405",
                       "operationSetCode": "NuGetSign",
                       "parameters": [ ],
                       "toolName": "sign",
                       "toolVersion": "1.0"
                   },
                   {
                       "keyCode": "CP-401405",
                       "operationSetCode": "NuGetVerify",
                       "parameters": [ ],
                       "toolName": "sign",
                       "toolVersion": "1.0"
                   }
                 ]
    SessionTimeout: '60'
    MaxConcurrency: '50'
    MaxRetryAttempts: '5'
- task: DotNetCoreCLI@2
  displayName: "dotnet pack Storage Release"
  inputs:
    command: 'pack'
    arguments: '--configuration $(buildConfiguration)'
    packagesToPack: '**/Fhir.Proxy.Storage.csproj'
    nobuild: true
    versioningScheme: 'byEnvVar'
    versionEnvVar: packageversion-release
    packDirectory: '$(Build.ArtifactStagingDirectory)'

- task: EsrpCodeSigning@1
  displayName: 'Sign Storage NuGet Release'
  inputs:
    ConnectedServiceName: 'ESRP Code Signing'
    FolderPath: '$(Build.ArtifactStagingDirectory)'
    Pattern: 'Microsoft.Health.Fhir.Proxy.Storage.$(packageversion-release).nupkg'
    UseMinimatch: true
    signConfigType: 'inlineSignParams'
    inlineOperation: |
      [
                   {
                       "keyCode": "CP-401405",
                       "operationSetCode": "NuGetSign",
                       "parameters": [ ],
                       "toolName": "sign",
                       "toolVersion": "1.0"
                   },
                   {
                       "keyCode": "CP-401405",
                       "operationSetCode": "NuGetVerify",
                       "parameters": [ ],
                       "toolName": "sign",
                       "toolVersion": "1.0"
                   }
                 ]
    SessionTimeout: '60'
    MaxConcurrency: '50'
    MaxRetryAttempts: '5'
- task: NuGetAuthenticate@0
  displayName: 'NuGet Authenticate'

#---------

- task: DotNetCoreCLI@2
  displayName: "dotnet pack Caching"
  inputs:
    command: 'pack'
    arguments: '--configuration $(buildConfiguration)'
    packagesToPack: '**/Fhir.Proxy.Caching.csproj'
    nobuild: true
    versioningScheme: 'byEnvVar'
    versionEnvVar: packageversion

- task: DotNetCoreCLI@2
  displayName: "dotnet pack Caching Prerelease"
  inputs:
    command: 'pack'
    arguments: '--configuration $(buildConfiguration)'
    packagesToPack: '**/Fhir.Proxy.Caching.csproj'
    nobuild: true
    versioningScheme: 'byEnvVar'
    versionEnvVar: packageversion-prerelease
    packDirectory: '$(Build.ArtifactStagingDirectory)'

- task: EsrpCodeSigning@1
  displayName: 'Sign Caching NuGet Prerelease'
  inputs:
    ConnectedServiceName: 'ESRP Code Signing'
    FolderPath: '$(Build.ArtifactStagingDirectory)'
    Pattern: 'Microsoft.Health.Fhir.Proxy.Caching.$(packageversion-prerelease).nupkg'
    UseMinimatch: true
    signConfigType: 'inlineSignParams'
    inlineOperation: |
      [
                   {
                       "keyCode": "CP-401405",
                       "operationSetCode": "NuGetSign",
                       "parameters": [ ],
                       "toolName": "sign",
                       "toolVersion": "1.0"
                   },
                   {
                       "keyCode": "CP-401405",
                       "operationSetCode": "NuGetVerify",
                       "parameters": [ ],
                       "toolName": "sign",
                       "toolVersion": "1.0"
                   }
                 ]
    SessionTimeout: '60'
    MaxConcurrency: '50'
    MaxRetryAttempts: '5'
- task: DotNetCoreCLI@2
  displayName: "dotnet pack Caching Release"
  inputs:
    command: 'pack'
    arguments: '--configuration $(buildConfiguration)'
    packagesToPack: '**/Fhir.Proxy.Caching.csproj'
    nobuild: true
    versioningScheme: 'byEnvVar'
    versionEnvVar: packageversion-release
    packDirectory: '$(Build.ArtifactStagingDirectory)'

- task: EsrpCodeSigning@1
  displayName: 'Sign Caching NuGet Release'
  inputs:
    ConnectedServiceName: 'ESRP Code Signing'
    FolderPath: '$(Build.ArtifactStagingDirectory)'
    Pattern: 'Microsoft.Health.Fhir.Proxy.Caching.$(packageversion-release).nupkg'
    UseMinimatch: true
    signConfigType: 'inlineSignParams'
    inlineOperation: |
      [
                   {
                       "keyCode": "CP-401405",
                       "operationSetCode": "NuGetSign",
                       "parameters": [ ],
                       "toolName": "sign",
                       "toolVersion": "1.0"
                   },
                   {
                       "keyCode": "CP-401405",
                       "operationSetCode": "NuGetVerify",
                       "parameters": [ ],
                       "toolName": "sign",
                       "toolVersion": "1.0"
                   }
                 ]
    SessionTimeout: '60'
    MaxConcurrency: '50'
    MaxRetryAttempts: '5'
- task: NuGetAuthenticate@0
  displayName: 'NuGet Authenticate'

- task: NuGetCommand@2
  displayName: 'Push Nuget Fhir.Proxy to Artifacts feed'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/Microsoft.Health.Fhir.Proxy.$(packageversion).Core.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '3dcf91a6-e317-4e72-bca9-fc85f99858f8/43bea277-312d-4753-a734-143e5c253af3'
    versioningScheme: 'byEnvVar'
    versionEnvVar: packageversion
    allowPackageConflicts: true

- task: NuGetCommand@2
  displayName: 'Push Nuget Fhir.Proxy.Extensions.Channels to Artifacts feed'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/Microsoft.Health.Fhir.Proxy.Extensions.Channels.$(packageversion).nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '3dcf91a6-e317-4e72-bca9-fc85f99858f8/43bea277-312d-4753-a734-143e5c253af3'
    versioningScheme: 'byEnvVar'
    versionEnvVar: packageversion
    allowPackageConflicts: true

- task: NuGetCommand@2
  displayName: 'Push Nuget Fhir.Proxy.Storage to Artifacts feed'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/Microsoft.Health.Fhir.Proxy.Storage.$(packageversion).nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '3dcf91a6-e317-4e72-bca9-fc85f99858f8/43bea277-312d-4753-a734-143e5c253af3'
    versioningScheme: 'byEnvVar'
    versionEnvVar: packageversion
    allowPackageConflicts: true

- task: NuGetCommand@2
  displayName: 'Push Nuget Fhir.Proxy.Caching to Artifacts feed'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/Microsoft.Health.Fhir.Proxy.Caching.$(packageversion).nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '3dcf91a6-e317-4e72-bca9-fc85f99858f8/43bea277-312d-4753-a734-143e5c253af3'
    versioningScheme: 'byEnvVar'
    versionEnvVar: packageversion
    allowPackageConflicts: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
- task: DeleteFiles@1
  inputs:
    SourceFolder: '$(Build.ArtifactStagingDirectory)/**/src/tests'
    Contents: '*'
    RemoveSourceFolder: true
